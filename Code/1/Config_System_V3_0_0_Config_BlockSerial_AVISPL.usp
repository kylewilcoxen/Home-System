/*******************************************************************************************
  SIMPL+ Module Information
  (Fill in comments below)
*******************************************************************************************/
/*
Dealer Name: AVI-SPL
System Name: Config System
Programmer: LRK

Copyright (C) AVI-SPL. All Rights Reserved.
The intellectual and technical concepts contained herein are proprietary to AVI-SPL, Inc. and subject to AVI-SPL's standard software license agreement. 
These materials may not be copied, reproduced, distributed or disclosed, in whole or in part, in any way without the written permission of an authorized 
representative of AVI-SPL. All references to AVI-SPL, Inc. shall also be references to AVI-SPL, Inc.'s affiliates.

Comments:
*/

/*******************************************************************************************
  Compiler Directives
  (Uncomment and declare compiler directives as needed)
*******************************************************************************************/
                
// #ENABLE_DYNAMIC
// #SYMBOL_NAME ""
// #HINT ""
#DEFINE_CONSTANT MAX_PROPERTIES 32
// #CATEGORY "" 
#CATEGORY "46" "AVISPL" // Custom
// #PRINT_TO_TRACE
// #DIGITAL_EXPAND 
#ANALOG_SERIAL_EXPAND InputsWithOutputs
// #OUTPUT_SHIFT 
#HELP_PDF_FILE "Config_System_V3_0_0_Config_BlockSerial_AVISPL.html"
#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
//#ENABLE_TRACE
#ENCODING_ASCII
// #ENCODING_UTF16
// #ENCODING_INHERIT_FROM_PARENT
// #ENCODING_INHERIT_FROM_PROGRAM

// #HELP_BEGIN
// #HELP_END

/*******************************************************************************************
  Include Libraries
  (Uncomment and include additional libraries as needed)
*******************************************************************************************/
// #CRESTRON_LIBRARY ""
// #USER_LIBRARY ""
#USER_SIMPLSHARP_LIBRARY "Config_System_V3_0_0_ConfigSystem_AVISPL"

/*******************************************************************************************
  DIGITAL, ANALOG and SERIAL INPUTS and OUTPUTS
  (Uncomment and declare inputs and outputs as needed)
*******************************************************************************************/

STRING_INPUT  _SKIP_, _SKIP_, Value[MAX_PROPERTIES][254];
STRING_OUTPUT _SKIP_, _SKIP_, ValueFB[MAX_PROPERTIES];
 
/*******************************************************************************************
  SOCKETS
  (Uncomment and define socket definitions as needed)
*******************************************************************************************/

/*******************************************************************************************
  Parameters
  (Uncomment and declare parameters as needed)
*******************************************************************************************/

STRING_PARAMETER ManagerName[50], ValueName[50];
                      
/*******************************************************************************************
  Parameter Properties
*******************************************************************************************/
                 
#BEGIN_PARAMETER_PROPERTIES ManagerName
   propValidUnits = unitString;
   propDefaultUnit = unitString;
   propDefaultValue = "SystemConfig";
   propShortDescription = "Name of the Config File Manager.";
#END_PARAMETER_PROPERTIES

#BEGIN_PARAMETER_PROPERTIES ValueName
   propValidUnits = unitString;
   propDefaultUnit = unitString;
   propDefaultValue = "BlockSerial";
   propShortDescription = "Name of this setting.";
#END_PARAMETER_PROPERTIES


/*******************************************************************************************
  Structure Definitions
  (Uncomment and define structure definitions as needed)
  Note:  Be sure to initialize all declared STRING variables as needed
         For example, in Function Main: struct.myString = "";
*******************************************************************************************/

/*******************************************************************************************
  Global Variables
*******************************************************************************************/
                    
ConfigValue theConfig;
             
/*******************************************************************************************
  Functions
*******************************************************************************************/
     
FUNCTION ModuleInitialize()
{
	theConfig.Register(ManagerName, ValueName, 1);

	RegisterEvent(theConfig, OnValueChanged, onValueChangedHandler);
}

/*******************************************************************************************
  Event Handlers
*******************************************************************************************/
            
CHANGE Value
{
	theConfig.SetBlockSerial(GetLastModifiedArrayIndex(), Value[GetLastModifiedArrayIndex()]);
}

EVENTHANDLER onValueChangedHandler(ConfigValue sender, ConfigEventArgs args)
{
  MAKESTRING(ValueFB[args.ValueIndex], "%s", args.ValueAsSerial());
}

/*******************************************************************************************
  Main()
*******************************************************************************************/

Function Main()
{
    WaitForInitializationComplete();

    ModuleInitialize();

} 

/*
pipeline-build-version: 3.0.0+1a54a33
*/
